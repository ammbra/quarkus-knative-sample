%prod.kafka.bootstrap.servers = ${KAFKA_BOOTSTRAP_SERVERS:my-cluster-kafka-bootstrap.kafka:9092}

mp.messaging.outgoing.order-events.connector = smallrye-kafka
mp.messaging.outgoing.order-events.topic = ${KAFKA_TOPIC:order-events}
mp.messaging.outgoing.order-events.merge=true
mp.messaging.outgoing.order-events.value.serializer = io.quarkus.kafka.client.serialization.ObjectMapperSerializer

quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = ${POSTGRES_USERNAME:postgres}
%prod.quarkus.datasource.password = ${POSTGRES_PASSWORD:postgres}
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${POSTGRES_SERVER:postgresql}:5432/postgres
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.sql = true

quarkus.kubernetes.deploy = true
quarkus.kubernetes.deployment-target = knative
quarkus.knative.env.vars.kafka-topic = order-events
quarkus.knative.env.vars.tick-timeout = 10000
quarkus.container-image.registry = quay.io
quarkus.container-image.group = anasandbox
#quarkus.container-image.build = true
#quarkus.container-image.push = true

#quarkus.kafka.health.enabled = true

app.orders.timeout = ${TICK_TIMEOUT:1000}